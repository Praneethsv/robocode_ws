package backprop;

import java.lang.Math;
import java.text.DecimalFormat;
import java.util.Vector;
import java.util.ArrayList;
import java.util.List;
import backprop.DataGen;

public class NueralNet {
	
	//Main Class
	public static void main(String[] args) {
	
		// Create Input parameters
		ArrayList<Double> x1_param = new ArrayList<Double>(500);
		ArrayList<Double> x2_param = new ArrayList<Double>(500);
		ArrayList<Double> labelOutput = new ArrayList<Double>(500);
		
		DecimalFormat df = new DecimalFormat("#.##");
		
	    DataGen trainData = new DataGen();
	    
	    // Data with different parameter values
	    for(int dataCount=0; dataCount<250; dataCount++) {
	    	x1_param.add(trainData.randomfunc());
	    	x2_param.add(trainData.randomfunc());
	    }//End of for loop
	    
	    //Data  with same parameter values
	    for(int dataCount=0; dataCount<250; dataCount++) {
	    	double val = trainData.randomfunc();
	    	x1_param.add(val);
	    	x2_param.add(val);
	    }
	    
	    //Printing parameter values
	    for(int dataCount=0; dataCount<500; dataCount++) {
	    	double value1 = trainData.XORfunc(x1_param.get(dataCount), x2_param.get(dataCount));
	    	double value2 = 
	    	System.out.print("x1= "+df.format(x1_param.get(dataCount))+" x2= "+df.format(x2_param.get(dataCount))+"\n");
	    }
	}//End of Main	
}//End of NeralNet


